<?xml version="1.0" encoding="utf-8"?>
<assembly name="Pentagon.Common">
  <member name="M:Pentagon.Collections.AllPassCollectionFilter`1.ApplyFilter(Pentagon.Collections.IFilterableCollection{`0})">
    <parameter name="coll">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Pentagon.Collections.HierarchyListNode`1.Children">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Pentagon.Collections.HierarchyListNode`1.Parent">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Pentagon.Collections.HierarchyListNode`1.Siblings">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Pentagon.Collections.ICollectionFilter`1.ApplyFilter(Pentagon.Collections.IFilterableCollection{`0})">
    <parameter name="coll">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.Collections.IFilterableCollection`1.ApplyFilter(Pentagon.Collections.ICollectionFilter{`0})">
    <parameter name="filter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Pentagon.Collections.IFilterableCollection`1.Filter">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Pentagon.Collections.ObservableSortedList`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IComparer{`0},Pentagon.Collections.ICollectionFilter{`0})">
    <parameter name="items">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.Collections.ObservableSortedList`1.Add(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.Collections.PagedList`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Index})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.Collections.PagedList`1.CreateBlank(System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor" />
  </member>
  <member name="M:Pentagon.Collections.PagedList`1.CreateBlank(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Index})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor" />
  </member>
  <member name="P:Pentagon.DtoProperty`1.Value">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Pentagon.Extensions.AttributeExtensions.GetAttributeValue``2(System.Type,System.Func{``0,``1})">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="valueSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.Extensions.AttributeExtensions.GetPropertyAttributeValue``4(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Func{``2,``3})">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyExpression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="valueSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.Extensions.AttributeExtensions.HasAttribute``1(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.Extensions.EnumerableExtensions.Append``1(System.Collections.Generic.IEnumerable{``0},``0[])">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor" />
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.Extensions.EnumerableExtensions.Append``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor" />
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toAdd">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.Extensions.EnumerableExtensions.FindOrderIndex``1(System.Collections.Generic.ICollection{``0},System.Func{System.Int32,System.Boolean})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor" />
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.Extensions.EnumerableExtensions.GroupBySize``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor" />
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.Extensions.EnumerableExtensions.OrderBySelf``1(System.Collections.Generic.IEnumerable{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor" />
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.Extensions.EnumerableExtensions.OrderBySelfDescending``1(System.Collections.Generic.IEnumerable{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor" />
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.Extensions.EnumerableExtensions.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor" />
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.Extensions.EnumerableExtensions.Prepend``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor" />
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toAdd">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.Extensions.EnumerableExtensions.ShiftLeft``1(System.Collections.Generic.IEnumerable{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor" />
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.Extensions.EnumerableExtensions.ShiftRight``1(System.Collections.Generic.IEnumerable{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor" />
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.Extensions.EnumerableExtensions.SymmetricExcept``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor" />
    <parameter name="coll">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="second">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.Extensions.EnumerableExtensions.ToHexString(System.Collections.Generic.IEnumerable{System.Byte})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.Extensions.EnumerableExtensions.WhereNotNull``1(System.Collections.Generic.IEnumerable{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor" />
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor" />
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.Extensions.EnumExtensions.GetItemAttribute``2(``1)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.Extensions.ExpressionExtensions.GetMemberValue(System.Linq.Expressions.MemberExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.Extensions.Extensions.IsAnyEqual``1(``0,``0[])">
    <parameter name="pars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.Extensions.PagedListExtensions.Select``2(Pentagon.Collections.PagedList{``0},System.Func{``0,``1})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor" />
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="callback">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.Extensions.QueueExtensions.Requeue``1(System.Collections.Generic.Queue{``0},``0)">
    <parameter name="queue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.Extensions.StringExtensions.SplitToLines(System.String)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.Extensions.TypeExtensions.GetAutoProperties(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.Extensions.TypeExtensions.GetNullableType(System.Type)">
    <parameter name="dataType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.Extensions.TypeExtensions.GetValue(System.Reflection.MemberInfo,System.Object)">
    <parameter name="memberInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.Helpers.AppDomainHelper.GetLoadableTypes(System.Reflection.Assembly)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor" />
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor" />
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.Helpers.AppDomainHelper.GetLoadedTypes(System.AppDomain)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor" />
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor" />
    <parameter name="appDomain">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.Helpers.CollectionEqualityComparer`1.Equals(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEnumerable{`0})">
    <parameter name="first">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="second">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.Helpers.CultureHelper.Exists(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.Helpers.CultureHelper.TryParse(System.String,System.Globalization.CultureInfo@)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="cultureInfo">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.Helpers.Enumeration.CompareTo(Pentagon.Helpers.Enumeration)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.Helpers.Enumeration.CompareTo(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.Helpers.Enumeration.Equals(Pentagon.Helpers.Enumeration)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.Helpers.Enumeration.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="F:Pentagon.Helpers.Enumeration.InstanceContainer">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Pentagon.Helpers.EnumHelper.GetValues``2">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Pentagon.Helpers.MathInterval.GetSampledInterval(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Pentagon.Helpers.ObservableObject.OnPropertyChanged(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotifyPropertyChangedInvocatorAttribute.#ctor" />
  </member>
  <member name="M:Pentagon.Helpers.PaginationHelper.CreateAllPages``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor" />
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.Helpers.PaginationHelper.CreatePagedList``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor" />
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="T:Pentagon.Helpers.Range`1">
    <attribute ctor="M:JetBrains.Annotations.UsedImplicitlyAttribute.#ctor" />
  </member>
  <member name="M:Pentagon.Helpers.RangeCompound`1.#ctor(Pentagon.IRange{`0}[])">
    <parameter name="ranges">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.Helpers.ReflectionHelper.GetAllPublicConstantValues``1(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor" />
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.Helpers.ReflectionHelper.GetPublicConstants(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor" />
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.Helpers.RetryHelper.RetryOnExceptionAsync(System.Func{System.Threading.Tasks.Task},System.Int32,System.TimeSpan,System.Func{System.Exception,Pentagon.Helpers.RetryHelper.RetryContext,System.Boolean},System.Func{System.Exception,System.Boolean},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
    <parameter name="operation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.Helpers.RetryHelper.RetryOnExceptionAsync``1(System.Func{System.Threading.Tasks.Task{``0}},System.Int32,System.TimeSpan,System.Func{System.Exception,Pentagon.Helpers.RetryHelper.RetryContext,System.Boolean},System.Func{System.Exception,System.Boolean},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
    <parameter name="operation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.Helpers.TypeNameHelper.GetTypeDisplayName(System.Object,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.Helpers.TypeNameHelper.GetTypeDisplayName(System.Type,System.Boolean,System.Boolean,System.Boolean,System.Char)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.OperationResults.AnnotatedOperationResult.op_Addition(Pentagon.OperationResults.AnnotatedOperationResult,Pentagon.OperationResults.AnnotatedOperationResult)">
    <parameter name="op1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.OperationResults.AnnotatedOperationResultExtensions.AddError``1(Pentagon.OperationResults.IAnnotatedOperationResult,``0)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.OperationResults.AnnotatedOperationResultExtensions.AddSuccessMessage``1(Pentagon.OperationResults.IAnnotatedOperationResult,``0)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.OperationResults.AnnotatedOperationResultExtensions.AddWarning``1(Pentagon.OperationResults.IAnnotatedOperationResult,``0)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.OperationResults.IAnnotatedOperationResult.AddMessage(System.String)">
    <parameter name="messageText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.OperationResults.IAnnotatedOperationResult.AddMessage(System.String,System.String)">
    <parameter name="messageText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Pentagon.OperationResults.IAnnotatedOperationResult.Messages">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Pentagon.OperationResults.ResultMessage.#ctor(System.String,System.String)">
    <parameter name="title">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="content">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Pentagon.OperationResults.ResultMessage.Content">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Pentagon.OperationResults.ResultMessage.Title">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="T:Pentagon.Percentage">
    <attribute ctor="M:JetBrains.Annotations.PublicAPIAttribute.#ctor" />
  </member>
  <member name="M:Pentagon.Threading.TaskHelper.AwaitSynchronously(System.Threading.Tasks.Task)">
    <attribute ctor="M:JetBrains.Annotations.PublicAPIAttribute.#ctor" />
    <parameter name="task">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.Threading.TaskHelper.AwaitSynchronously``1(System.Threading.Tasks.Task{``0})">
    <attribute ctor="M:JetBrains.Annotations.PublicAPIAttribute.#ctor" />
    <parameter name="task">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.Threading.TaskHelper.RunAndForget(System.Func{System.Threading.Tasks.Task},System.Boolean,System.Action{System.Exception})">
    <attribute ctor="M:JetBrains.Annotations.PublicAPIAttribute.#ctor" />
    <parameter name="callback">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.Threading.TaskHelper.RunAndForget(System.Threading.Tasks.Task,System.Boolean,System.Action{System.Exception})">
    <attribute ctor="M:JetBrains.Annotations.PublicAPIAttribute.#ctor" />
    <parameter name="task">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.Threading.TaskHelper.TimeoutAfter(System.Threading.Tasks.Task,System.TimeSpan,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.PublicAPIAttribute.#ctor" />
    <parameter name="task">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.Threading.TaskHelper.TimeoutAfter``1(System.Threading.Tasks.Task{``0},System.TimeSpan,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.PublicAPIAttribute.#ctor" />
    <parameter name="task">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.Threading.TaskHelper.TryInvokeAsync``1(System.Func{System.Threading.Tasks.Task{``0}},System.Int32,System.Int32,System.Threading.CancellationToken)">
    <attribute ctor="M:JetBrains.Annotations.PublicAPIAttribute.#ctor" />
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Pentagon.Threading.TaskHelper.WithCancellation(System.Threading.Tasks.Task,System.Threading.CancellationToken)">
    <attribute ctor="M:JetBrains.Annotations.PublicAPIAttribute.#ctor" />
  </member>
  <member name="M:Pentagon.Threading.TaskHelper.WithCancellation``1(System.Threading.Tasks.Task{``0},System.Threading.CancellationToken)">
    <attribute ctor="M:JetBrains.Annotations.ItemCanBeNullAttribute.#ctor" />
    <attribute ctor="M:JetBrains.Annotations.PublicAPIAttribute.#ctor" />
    <parameter name="task">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
</assembly>